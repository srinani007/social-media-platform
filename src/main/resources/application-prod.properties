# ===============================
# Application Name & Profile
# ===============================
spring.application.name=social-media-platform
spring.profiles.active=prod

# ===============================
# Database Configuration (PostgreSQL)
# ===============================
spring.datasource.url=jdbc:postgresql://dpg-d0onkbje5dus73d24r20-a.oregon-postgres.render.com/db_social_kmuf?sslmode=require
spring.datasource.username=db_social_kmuf_user
spring.datasource.password=0huF5cfYgtEM038fqfj1hCxcvlcvhW8p
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# JPA & Flyway (Schema)
# ===============================
# Schema for first deploy (then change to `validate`)
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Optional: Flyway
spring.flyway.enabled=false
spring.flyway.locations=classpath:db/migration

# ===============================
# Thymeleaf
# ===============================
spring.thymeleaf.cache=true

# ===============================
# Server & Session
# ===============================
server.port=${PORT:10000}
server.servlet.session.timeout=30m
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# ===============================
# Error Handling
# ===============================
server.error.include-stacktrace=never
server.error.include-message=always
server.error.whitelabel.enabled=false

# ===============================
# Mail (Gmail via App Password)
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=prasanthkunchanapalli.ac@gmail.com
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===============================
# Google OAuth2
# ===============================
spring.security.oauth2.client.registration.google.client-id=37892006939-82jc5vufa53hudnrq5g718de388th1j8.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email
spring.security.oauth2.client.registration.google.redirect-uri-template=https://social-media-platform-3fwe.onrender.com/login/oauth2/code/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=email

# ===============================
# PayPal (Sandbox)
# ===============================
paypal.client.id=AddJFeCM78R6cHw5BV7ZLt0o3F79SzJ5q4mZi1vDigx4hQNl_IwvlGDiGIEnPCRBRsyBEG2fluX25MNg
paypal.client.secret=${PAYPAL_CLIENT_SECRET}
paypal.mode=sandbox

# ===============================
# Logging
# ===============================
logging.level.root=ERROR
logging.level.org.springframework=INFO
logging.level.com.prash=INFO
logging.pattern.console=%d{HH:mm:ss} %-5level - %msg%n
spring.jpa.properties.hibernate.format_sql=true
spring.cache.type=caffeine

# Detailed Debug (temp for prod debugging)
logging.level.com.prash.social_media_platform.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.transaction=TRACE
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.com.social_user=DEBUG

# File Logging (optional)
logging.file.name=logs/social-sphere.log
logging.file.max-size=10MB
logging.file.max-history=7

# ===============================
# Spring Config Import (dotenv-style support)
# ===============================
spring.config.import=optional:dotenv:

# ===============================
# Monitoring
# ===============================
management.endpoints.web.exposure.include=health,info,shutdown
management.endpoint.shutdown.enabled=true
logging.level.org.springframework.data.redis=warn


# ===============================
# Disable dev features
# ===============================
spring.h2.console.enabled=false
