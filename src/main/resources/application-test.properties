# ===============================
# App & Profile
# ===============================
spring.application.name=social-media-platform
spring.profiles.active=test

# ===============================
# DataSource (PostgreSQL - Same as Prod)
# ===============================
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# JPA / Hibernate (Safe)
# ===============================
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# ===============================
# Flyway (Enable for schema validation)
# ===============================
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# ===============================
# Mail (Gmail via App Password)
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===============================
# Google OAuth (Pre-prod Redirect URL)
# ===============================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email
spring.security.oauth2.client.registration.google.redirect-uri-template=https://staging-social-media-platform.onrender.com/login/oauth2/code/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=email

# ===============================
# Thymeleaf
# ===============================
spring.thymeleaf.cache=true

# ===============================
# Error Handling
# ===============================
server.error.include-stacktrace=never
server.error.include-message=always
server.error.whitelabel.enabled=false

# ===============================
# Logging (Safe but informative)
# ===============================
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.com.prash=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{HH:mm:ss} %-5level - %msg%n

# ===============================
# Shutdown + Monitoring
# ===============================
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s
management.endpoints.web.exposure.include=health,info
management.endpoint.shutdown.enabled=true

# ===============================
# Dotenv Support
# ===============================
spring.config.import=optional:dotenv:
